import flet as ft
from telegram_api import get_updates, send_message, load_all_history_from_db, save_message_to_db
import time
import threading

# --- –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
def main(page: ft.Page):
    page.title = "–ü–∞–Ω–µ–ª—å –°—É—Ñ–ª—ë—Ä–∞ Pixelka"
    page.theme_mode = ft.ThemeMode.DARK

    # --- UI –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ---
    chats_list = ft.ListView(expand=True, spacing=10, padding=10, auto_scroll=True)
    messages_view = ft.ListView(expand=True, spacing=5, auto_scroll=True, padding=10)
    response_field = ft.TextField(hint_text="–û—Ç–≤–µ—Ç –æ—Ç –∏–º–µ–Ω–∏ Pixelka...", expand=True, border_radius=10)
    chat_title = ft.Text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ª–æ–≥", size=20, weight=ft.FontWeight.BOLD)
    
    # --- –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞ ---
    def back_to_list(e):
        left_column.visible = True
        right_column.visible = False
        page.update()

    back_button = ft.IconButton(ft.icons.ARROW_BACK, on_click=back_to_list)

    # --- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—à–∏ –∫–æ–ª–æ–Ω–∫–∏ ---
    left_column = ft.Column(
        [
            ft.Text("–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏:", weight=ft.FontWeight.BOLD),
            ft.Divider(),
            chats_list
        ],
        width=300
    )
    
    right_column = ft.Column(
        [
            ft.Row([back_button, chat_title]), # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –∫ –∑–∞–≥–æ–ª–æ–≤–∫—É
            messages_view,
            ft.Row([response_field, ft.IconButton(ft.icons.SEND, on_click=lambda e: send_click(e), icon_size=30)])
        ],
        expand=True
    )

    # --- –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ---
    main_layout = ft.Row([left_column, ft.VerticalDivider(), right_column], expand=True)

    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π ---
    def on_chat_click(e):
        selected_id_str = str(e.control.data)
        page.session.set("selected_chat_id", selected_id_str)
        chat_title.value = f"{e.control.text}" # –£–±—Ä–∞–ª–∏ "–î–∏–∞–ª–æ–≥ —Å" –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –Ω–∞ –º–æ–±–∏–ª–∫–µ
        
        messages_view.controls.clear()
        history = page.session.get("conversations").get(selected_id_str, [])
        for msg_data in history:
            prefix = "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:" if msg_data['is_user'] else "ü§ñ Pixelka (–í—ã):"
            messages_view.controls.append(ft.Text(f"{prefix} {msg_data['text']}", selectable=True))

        # –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å: –Ω–∞ —É–∑–∫–æ–º —ç–∫—Ä–∞–Ω–µ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥
        if page.width < 600:
            left_column.visible = False
            right_column.visible = True
        
        page.update()

    def send_click(e):
        chat_id_str = page.session.get("selected_chat_id")
        if chat_id_str and response_field.value:
            text_to_send = response_field.value
            chat_id = int(chat_id_str)
            
            send_message(chat_id, text_to_send)
            save_message_to_db(chat_id, text_to_send, is_user=False)
            
            conversations = page.session.get("conversations")
            conversations[chat_id_str].append({'text': text_to_send, 'is_user': False})
            
            prefix = "ü§ñ Pixelka (–í—ã):"
            messages_view.controls.append(ft.Text(f"{prefix} {text_to_send}", selectable=True))
            
            response_field.value = ""
            page.update()

    # --- –õ–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞/—ç–∫—Ä–∞–Ω–∞ ---
    def resize_layout(e):
        if page.width < 600: # –£–∑–∫–∏–π —ç–∫—Ä–∞–Ω
            left_column.width = None # –£–±–∏—Ä–∞–µ–º —Ñ–∏–∫—Å. —à–∏—Ä–∏–Ω—É
            left_column.expand = True # –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
            right_column.visible = False # –ü—Ä—è—á–µ–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É
            back_button.visible = True # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            if len(main_layout.controls) > 1: # –£–±–∏—Ä–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                 if isinstance(main_layout.controls[1], ft.VerticalDivider):
                    main_layout.controls.pop(1)
        else: # –®–∏—Ä–æ–∫–∏–π —ç–∫—Ä–∞–Ω
            left_column.width = 300 # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Å. —à–∏—Ä–∏–Ω—É
            left_column.expand = False
            left_column.visible = True # –û–±–µ –∫–æ–ª–æ–Ω–∫–∏ –≤–∏–¥–∏–º—ã
            right_column.visible = True
            back_button.visible = False # –ü—Ä—è—á–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            if len(main_layout.controls) == 1: # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                 main_layout.controls.insert(1, ft.VerticalDivider())
        page.update()

    page.on_resize = resize_layout

    # --- –§–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫ ---
    def update_checker():
        while True:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
            if not page.session:
                break
                
            last_id = page.session.get("last_update_id")
            offset = (last_id or 0) + 1
            updates = get_updates(offset)
            
            conversations = page.session.get("conversations")
            
            if updates:
                new_messages_for_current_chat = False
                for update in updates:
                    if 'message' in update and 'text' in update['message']:
                        msg = update['message']
                        chat_id = msg['chat']['id']
                        chat_id_str = str(chat_id)
                        user_name = msg['from'].get('first_name', 'User')
                        text = msg['text']
                        
                        save_message_to_db(chat_id, text, is_user=True, user_name=user_name)
                        
                        is_new_chat = chat_id_str not in conversations
                        if is_new_chat:
                            conversations[chat_id_str] = []
                            chats_list.controls.append(
                                ft.ElevatedButton(f"{user_name} ({chat_id_str})", on_click=on_chat_click, data=chat_id_str)
                            )
                        
                        conversations[chat_id_str].append({'text': text, 'is_user': True, 'user_name': user_name})

                        if page.session.get("selected_chat_id") == chat_id_str:
                            prefix = "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"
                            messages_view.controls.append(ft.Text(f"{prefix} {text}", selectable=True))
                            new_messages_for_current_chat = True
                    
                    if 'update_id' in update:
                        page.session.set("last_update_id", update['update_id'])
                
                # –û–±–Ω–æ–≤–ª—è–µ–º UI —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –æ–±–Ω–æ–≤–ª—è—Ç—å
                if page.controls or new_messages_for_current_chat:
                    page.update()
            
            time.sleep(3)

    # --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
    def initialize():
        page.add(ft.Column([ft.ProgressRing(), ft.Text("–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...")], alignment=ft.MainAxisAlignment.CENTER, horizontal_alignment=ft.CrossAxisAlignment.CENTER))
        initial_history = load_all_history_from_db()

        if initial_history is None:
            page.clean()
            page.add(ft.Text("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é.", color=ft.colors.RED))
            page.update()
            return

        page.session.set("conversations", initial_history)
        
        for chat_id_str, messages in initial_history.items():
            user_name = "User"
            # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
            for msg in reversed(messages):
                if msg.get('user_name'):
                    user_name = msg['user_name']
                    break
            chats_list.controls.append(
                ft.ElevatedButton(f"{user_name} ({chat_id_str})", on_click=on_chat_click, data=chat_id_str)
            )
        
        page.session.set("last_update_id", 0)
        page.session.set("selected_chat_id", None)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫
        threading.Thread(target=update_checker, daemon=True).start()
        
        # –û—á–∏—â–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç "–ó–∞–≥—Ä—É–∑–∫–∞..." –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à –≥–ª–∞–≤–Ω—ã–π layout
        page.clean()
        page.add(main_layout)
        # –°—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞–µ–º resize, —á—Ç–æ–±—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–¥—Å—Ç—Ä–æ–∏–ª—Å—è –ø–æ–¥ —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
        resize_layout(None)
        
    initialize()

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ---
ft.app(target=main)
